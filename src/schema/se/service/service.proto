syntax = "proto3";

package se.service;

import "se/slate/schema.proto";

// The core editor API from a frontend point of view.
service SemanticEditor {
  rpc FetchSlateSchema (FetchSlateSchemaRequest) returns (FetchSlateSchemaResponse);
  rpc ListFiles (ListFilesRequest) returns (ListFilesResponse);
}

message FetchSlateSchemaRequest {
  // Empty
}

message FetchSlateSchemaResponse {
  se.slate.Schema schema = 1;
}

message ListFilesRequest {
  string path = 1;
}

message ListFilesResponse {
  repeated File file = 1;

  message File {
    string path = 1;

    oneof kind {
      Regular regular = 2;
      Directory directory = 3;
      Device device = 4;
      Link link = 5;
      Pipe pipe = 6;
      Socket socket = 7;
    }
  }

  message Regular {}

  message Directory {}

  message Link {
    string target = 1;
  }

  message Device {}

  message Pipe {}

  message Socket {}
}
